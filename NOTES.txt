# TODO

## Items

* minio bucket validation (in gleaner)
* migrate to docker pull chromedp/headless-shell:latest and test
* migrate to pyshacl from topquadrant 
* migrate to yaml config from JSON
* load shacl from github?  or minio
* graphql UI based on various shapes 
* make the millers better functions in a package to improve reuse and further milling
* make a report of the results and more importantly, the errors
* WKT output from miller..   ref: https://github.com/twpayne/go-geom
* SHACL pulls from minio and initial test is for spatial element

## How to run (or at least try..., this is still a work in progress)

1) Get the compose file via curl, wgt, httpie or your favorite method.
curl https://raw.githubusercontent.com/earthcubearchitecture-project418/gleaner/master/deployments/gleanerServices.yml -o gleanerService.yml

2) Set up your environment variables, (I have no clue how this is done in Windows...   )

3) Pull the containers (or just let that happen when you invoke them)

4) If you use docker-compose then try

`docker-compose -f gleanerService.yml up -d`

or for swarm

`docker stack deploy --compose-file gleanerService.yml gleaner`

5) Grab the binary from the release page or pull the gleaner container.  At this 
point best to grab the release binary unless you are comfortable running command line
apps from containers.  I'll document the later but likely always provide both.

* Docker hub: https://cloud.docker.com/u/nsfearthcube/repository/docker/nsfearthcube/gleaner
* Gleaner release page: 

5.5) Run the glean -checksetup command to validate connections and make the required
minio buckets if they are missing

6) Make a config file.  Pull the example one and edit it.   This is the worst part 
mostly likely and I am going to switch from JSON to YAML for configs.   (I should never have used JSON for config, sorry about that).

7) Copy your config file into the minio object store in the correct bucket with 
the correct object name.  The easiest way if you don't have a local s3 API 
compatible client is to pull the minio mc client from https://hub.docker.com/r/minio/mc/

8) Copy the config file in...   make sure to do this when you edit it.

9) Ok, finally ready at step 8 to see if this even works.  

